from sklearn.covariance import EmpiricalCovariance as Ecov
from gibbs_cheby import gibbs_cheby
from matplotlib import pyplot as plt
import numpy as np
from numpy import linalg as la
from conj_grad import conj_grad

#read dimension in from file
with open("dim.txt") as f:
    lines = f.readlines()
dim = lines[0]
print(lines)
if dim=="2d":
    test_A = np.loadtxt("2d.txt",delimiter=',')
elif dim=="3d":
    test_A = np.loadtxt("3d.txt",delimiter=',')
else:
    print("ERROR, DIMENSION NOT SPECIFIED CORRECTLY")
#now run chebyshev sampler first...
print("running chebyshev sampler")
err_tol = 3e-2
my_gibbs = gibbs_cheby(1.0,test_A,err_tol)
my_gibbs.sample(False)
#now load eigenvalues generated by matlab file
eigs = np.loadtxt("eigs.txt",delimiter=',')
eigs = [1/eig for eig in eigs]
plt.semilogy(np.sort(eigs),label='dirichelt formula',marker='o')
my_gibbs.espectrum()

#now doing conjugate gradient
print("doing conjugate gradient samples")
samples = my_gibbs.conj_grad_sample(5e4)
#grabbing eigenvalues
eigs, eigvecs = la.eigh(samples)
eigs = np.sort(eigs)
print(eigs)
plt.semilogy(eigs,label="conjugate gradient eigs",marker='x')

plt.legend()
plt.show()
